var searchIndex = {};
searchIndex['uuid'] = {"items":[[0,"","uuid","Generate and parse UUIDs"],[1,"Uuid","","A Universally Unique Identifier (UUID)"],[2,"UuidVersion","","The version of the UUID, denoting the generating algorithm"],[12,"Mac","","Version 1: MAC address",0],[12,"Dce","","Version 2: DCE Security",0],[12,"Md5","","Version 3: MD5 hash",0],[12,"Random","","Version 4: Random",0],[12,"Sha1","","Version 5: SHA-1 hash",0],[2,"UuidVariant","","The reserved variants of UUIDs"],[12,"NCS","","Reserved by the NCS for backward compatibility",1],[12,"RFC4122","","As described in the RFC4122 Specification (default)",1],[12,"Microsoft","","Reserved by Microsoft for backward compatibility",1],[12,"Future","","Reserved for future expansion",1],[2,"ParseError","","Error details for string parsing failures"],[12,"InvalidLength","","",2],[12,"InvalidCharacter","","",2],[12,"InvalidGroups","","",2],[12,"InvalidGroupLength","","",2],[4,"UuidBytes","","A 128-bit (16 byte) buffer containing the ID"],[10,"eq","","",0],[10,"ne","","",0],[10,"eq","","",1],[10,"ne","","",1],[10,"hash","","",3],[10,"fmt","","",2],[10,"nil","","Returns a nil or empty UUID (containing all zeroes)",3],[10,"new","","Create a new UUID of the specified version",3],[10,"new_v4","","Creates a new random UUID",3],[10,"from_fields","","Creates a UUID using the supplied field values",3],[10,"from_bytes","","Creates a UUID using the supplied bytes",3],[10,"get_variant","","Returns the variant of the UUID structure",3],[10,"get_version_num","","Returns the version number of the UUID",3],[10,"get_version","","Returns the version of the UUID",3],[10,"as_bytes","","Return an array of 16 octets containing the UUID data",3],[10,"to_simple_string","","Returns the UUID as a string of 16 hexadecimal digits",3],[10,"to_hyphenated_string","","Returns a string of hexadecimal digits, separated into groups with a hyphen.",3],[10,"to_urn_string","","Returns the UUID formatted as a full URN string",3],[10,"parse_str","","Parses a UUID from a string of hexadecimal digits with optional hyphens",3],[10,"is_nil","","Tests if the UUID is nil",3],[10,"default","","Returns the nil UUID, which is all zeroes",3],[10,"clone","","Returns a copy of the UUID",3],[10,"from_str","","Parse a hex string and interpret as a UUID",3],[10,"fmt","","",3],[10,"eq","","",3],[10,"encode","","Encode a UUID as a hyphenated string",3],[10,"decode","","Decode a UUID from a string",3],[10,"rand","","",3]],"paths":[[2,"UuidVersion"],[2,"UuidVariant"],[2,"ParseError"],[1,"Uuid"]]};
initSearch(searchIndex);
